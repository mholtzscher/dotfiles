" https://github.com/JetBrains/ideavim/wiki/set-commands
set scrolloff=10 " Minimal number of lines above and below the cursor
set history=1000 " Number of command-lines that are remembered
set showmode " Show the current mode in the status bar

" set leader to space
map <space> <nop>
let mapleader=" "

set clipboard+=unnamed " Use the system clipboard

" find and replace
set hlsearch " Highlight matches with the last search pattern
set incsearch " Show where search pattern typed so far matches
set ignorecase " Ignore case in search patterns
set smartcase " Use case sensitive search if any character in the pattern is uppercase
set gdefault " The ':substitute' flag 'g' is by default
nmap <leader>nh :noh<CR>

" quickly open and edit ideavimrc
nnoremap <leader>fc :edit ~/.ideavimrc<CR>
nnoremap <leader>lp :source ~/.ideavimrc

" ideavim settings
set ideajoin
set ideamarks " Maps Vim's global marks to IDE bookmarks.
set idearefactormode=normal " Specifies the mode to be used when a refactoring selects text to be edited (e.g. renaming, live template fields, introduce variable, etc)

" ############## PLUGINS ################
" text-object (bundle plugin)
set vim-paragraph-motion
set textobj-indent
set textobj-entire
set argtextobj

" jump-motion (required idea plugin: IdeaVim-EasyMotion, AceJump)
set easymotion
set notimeout

" which-key (required idea plugin: IdeaVim-WhichKey)
set which-key
set timeoutlen=5000

" sneak (required idea plugin: IdeaVim-Sneak)
set sneak

" string manipulate (required idea plugin: String Manipulation)
" nmap <leader>ss <Action>(osmedile.intellij.stringmanip.PopupChoiceAction)

" code screenshot (required idea plugin: Code Screenshots)
" nmap <leader>cs <Action>(one.util.ideaplugin.screenshoter.CopyImageAction)

" nerdtree (bundle plugin)
set NERDTree
nnoremap - :NERDTree<CR>
nmap <Leader>e :NERDTreeToggle<CR>

" surround (bundle plugin)
" usage: https://github.com/tpope/vim-surround
set surround

" exchange (bundle plugin)
" usage: https://github.com/tommcdo/vim-exchange
set exchange

" replace with register (bundle plugin)
" usage: https://github.com/vim-scripts/ReplaceWithRegister
set ReplaceWithRegister

" commentary (bundle plugin)
set commentary

" highlight yank (bundle plugin)
set highlightedyank
let g:highlightedyank_highlight_duration = "100"
let g:highlightedyank_highlight_color = "rgba(57, 197, 187, 155)"

" ####### Key Mappings #######
" better escape
imap jk <Esc>

" location
nmap <C-i> <Action>(Forward)
nmap <C-o> <Action>(Back)
nmap <C-u> <C-u>zz
nmap <C-d> <C-d>zz

" buffer (buffer < window < tab)
nmap <leader>xx <Action>(CloseContent)
nmap <leader>xa <Action>(CloseAllEditors)
nmap <leader>xo <Action>(CloseAllEditorsButActive)
nmap <leader>xp <Action>(CloseAllUnpinnedEditors)

nmap <leader>d "_d
vmap <leader>d "_d
xmap <leader>p "_dP
xmap <leader>y "+y

" tab and window actions
let g:WhichKeyDesc_window_actions = "<leader>w Window Actions"
nmap <S-h> <Action>(PreviousTab)
nmap <leader>wh <Action>(PreviousTab)
nmap <S-l> <Action>(NextTab)
nmap <leader>wl <Action>(NextTab)
map <leader>wS <Action>(SplitHorizontally)
map <leader>wv <Action>(SplitVertically)
" nmap <C-p> <Action>(JumpToLastWindow)
nmap <C-k> <C-w>k
nmap <C-j> <C-w>j
nmap <C-h> <C-w>h
nmap <C-l> <C-w>l

nmap <leader>ww <Action>(HideAllWindows)
nmap <leader>wk <Action>(StretchSplitToTop)
nmap <leader>wj <Action>(StretchSplitToBottom)
nmap <C-,> <Action>(StretchSplitToLeft)
nmap <C-.> <Action>(StretchSplitToRight)
nmap <leader>wm <Action>(MaximizeEditorInSplit)
nmap <leader>wu <Action>(UnsplitAll)

" menu
nmap <leader>mm <Action>(MainMenu)
nmap <leader>ma <Action>(AnalyzeMenu)
nmap <leader>mb <Action>(BuildMenu)
nmap <leader>mc <Action>(CodeMenu)
nmap <leader>mf <Action>(FindMenuGroup)
nmap <leader>mg <Action>(GoToMenu)
nmap <leader>ms <Action>(ScopeViewPopupMenu)
nmap <leader>mt <Action>(EditorTabPopupMenu)
nmap <leader>mw <Action>(ToolWindowsGroup)

" file
let g:WhichKeyDesc_file_actions = "<leader>f File Actions"
nmap <leader>fo <Action>(OpenFile)
"nmap <leader>fp <Action>(CopyAbsolutePath)
nmap <leader><leader> <Action>(SearchEverywhere)
nmap <leader>, <Action>(RecentFiles)
nmap <leader>fl <Action>(RecentLocations)
nmap <leader>fp <Action>(ManageRecentProjects)
nmap <leader>fh <Action>(LocalHistory.ShowHistory)
nmap <leader>ff <Action>(ShowFilePath)
nmap <leader>fi <Action>(SelectIn)
nmap <leader>/ <Action>(FindInPath)
nmap <leader>rp <Action>(ReplaceInPath)
"nmap <leader>sw <Action>($SearchWeb)

" tag
nmap <leader>fu <Action>(FindUsages)
nmap <leader>fs <Action>(FileStructurePopup)
nmap <leader>su <Action>(ShowUsages)
nmap <leader>hl <Action>(HighlightUsagesInFile)
nmap <leader>qp <Action>(QuickPreview)
nmap <leader>qd <Action>(QuickDefinition)
nmap <leader>qD <Action>(QuickTypeDefinition)

" code
nmap <leader>qf <Action>(ShowIntentionActions)
nmap <leader>se <Action>(ShowErrorDescription)
nmap <leader>om <Action>(OverrideMethods)
nmap <leader>im <Action>(ImplementMethods)
nmap <leader>ic <Action>(InspectCode)
nmap <leader>so <Action>(SelectAllOccurrences)
nmap <leader>gc <Action>(Generate)
nmap <leader>gt <Action>(GotoTest)

" run
nmap <leader>rc <Action>(ContextRun)
nmap <leader>rx <Action>(chooseRunConfiguration)
nmap <leader>rr <Action>(Rerun)
nmap <leader>rt <Action>(RunTests)
nmap <leader>rs <Action>(Stop)

" debug
nmap <leader>dc <Action>(ContextDebug)
nmap <leader>dx <Action>(Debug)
nmap <leader>db <Action>(ToggleLineBreakpoint)
nmap <leader>de <Action>(EditBreakpoint)
nmap <leader>dv <Action>(ViewBreakpoints)

" build
nmap <leader>bb <Action>(BuildMenu)

" refactor
nmap <leader>cr <Action>(RenameElement)
nmap <leader>re <Action>(Refactorings.QuickListPopupAction)
nmap <leader>uw <Action>(Unwrap)
nmap <leader>sw <Action>(SurroundWith)
nmap <leader>sd <Action>(SafeDelete)

" collapse
nmap zc <Action>(ExpandCollapseToggleAction)
nmap za <Action>(CollapseAllRegions)
nmap zA <Action>(ExpandAllRegions)

" []
nmap [e <Action>(GotoPreviousError)
nmap ]e <Action>(GotoNextError)
nmap [u <Action>(GotoPrevElementUnderCaretUsage)
nmap ]u <Action>(GotoNextElementUnderCaretUsage)
nmap [o <Action>(PreviousOccurence)
nmap ]o <Action>(NextOccurence)
nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [c <Action>(JumpToLastChange)
nmap ]c <Action>(JumpToNextChange)

" goto
nmap <Leader>ca :action ShowIntentionActions<CR>
nmap ga <Action>(GotoAction)
nmap gc <Action>(GotoClass)
nmap gf <Action>(GotoFile)
nmap gs <Action>(GotoSymbol)
nmap gt <Action>(GotoTest)
nmap gT <Action>(TextSearchAction)
nmap go <Action>(GotoSuperMethod)
nmap gd <Action>(GotoDeclaration)
nmap gD <Action>(GotoTypeDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gI <Action>(QuickImplementations)
nmap gn <Action>(ShowNavBar)

" terminal
nmap <leader>t <Action>(ActivateTerminalToolWindow)

" bookmark
nmap mm <Action>(ToggleBookmark)
nmap ms <Action>(ShowBookmarks)

" todo
nmap <leader>to <Action>(ActivateTODOToolWindow)

" task
nmap <leader>ts <Action>(tasks.goto)

" idea join
nmap \\jl <Action>(EditorJoinLines)

" gist
nmap \\cg <Action>(Github.Create.Gist)

" open IdeaVim settings
nmap \\v <Action>(VimActions)

" continuous shift
xnoremap < <gv
xnoremap > >gv

" alias
nmap <C-a> ggVG"+y
