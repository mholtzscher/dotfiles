return {
  -- "jackMort/ChatGPT.nvim",
  -- event = "VeryLazy",
  -- config = function()
  --   require("chatgpt").setup({
  --     openai_params = {
  --       model = "gpt-4",
  --     },
  --     openai_edit_params = {
  --       model = "gpt-4",
  --     },
  --   })
  -- end,
  -- init = function()
  --   require("which-key").add({
  --     { "<leader>m", group = "ChatGPT" },
  --     { "<leader>mc", "<cmd>ChatGPT<CR>", desc = "ChatGPT" },
  --     {
  --       mode = { "n", "v" },
  --       { "<leader>ma", "<cmd>ChatGPTRun add_tests<CR>", desc = "Add Tests" },
  --       { "<leader>md", "<cmd>ChatGPTRun docstring<CR>", desc = "Docstring" },
  --       { "<leader>me", "<cmd>ChatGPTEditWithInstruction<CR>", desc = "Edit with instruction" },
  --       { "<leader>mf", "<cmd>ChatGPTRun fix_bugs<CR>", desc = "Fix Bugs" },
  --       { "<leader>mg", "<cmd>ChatGPTRun grammar_correction<CR>", desc = "Grammar Correction" },
  --       { "<leader>mk", "<cmd>ChatGPTRun keywords<CR>", desc = "Keywords" },
  --       { "<leader>ml", "<cmd>ChatGPTRun code_readability_analysis<CR>", desc = "Code Readability Analysis" },
  --       { "<leader>mo", "<cmd>ChatGPTRun optimize_code<CR>", desc = "Optimize Code" },
  --       { "<leader>mr", "<cmd>ChatGPTRun roxygen_edit<CR>", desc = "Roxygen Edit" },
  --       { "<leader>ms", "<cmd>ChatGPTRun summarize<CR>", desc = "Summarize" },
  --       { "<leader>mt", "<cmd>ChatGPTRun translate<CR>", desc = "Translate" },
  --       { "<leader>mx", "<cmd>ChatGPTRun explain_code<CR>", desc = "Explain Code" },
  --     },
  --   })
  -- end,
  -- dependencies = {
  --   "MunifTanjim/nui.nvim",
  --   "nvim-lua/plenary.nvim",
  --   "nvim-telescope/telescope.nvim",
  -- },
}
