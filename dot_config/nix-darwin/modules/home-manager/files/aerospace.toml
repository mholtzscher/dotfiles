# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  # JankyBorders has a built-in detection of already running process,
  # so it won't be run twice on AeroSpace restart
  'exec-and-forget borders active_color=0xfff7768e inactive_color=0xff7aa2f7 width=5.0 hidpi=on style=round',
  # 'exec-and-forget borders',
]

# Start AeroSpace at login
start-at-login = false

#. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'
# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
# outer.right = [{ monitor.'DeskPad Display' = 0 }, { monitor.main = 1200 }, 24]
inner.horizontal = 20
inner.vertical = 20
# outer.left = [{ monitor.'DeskPad Display' = 0 }, { monitor.main = 1200 }, 24]
# outer.bottom = 10
# outer.top = 10

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec] # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true # If you don't touch "exec" section,
[exec.env-vars] # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right
# See: https://nikitabobko.github.io/AeroSpace/commands#mode

alt-ctrl-cmd-h = 'focus left'
alt-ctrl-cmd-j = 'focus down'
alt-ctrl-cmd-k = 'focus up'
alt-ctrl-cmd-l = 'focus right'
alt-ctrl-cmd-minus = 'layout floating tiling'
alt-ctrl-cmd-m = 'resize width -100'
alt-ctrl-cmd-comma = 'resize width +100'
alt-ctrl-cmd-u = 'resize width 2400'
alt-ctrl-cmd-i = 'fullscreen --no-outer-gaps'

alt-shift-semicolon = 'mode service'
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-ctrl-cmd-1 = 'workspace 1'
alt-ctrl-cmd-2 = 'workspace 2'
alt-ctrl-cmd-3 = 'workspace 3'
alt-ctrl-cmd-4 = 'workspace 4'
alt-ctrl-cmd-5 = 'workspace 5'
alt-ctrl-cmd-6 = 'workspace 6'
alt-ctrl-cmd-7 = 'workspace 7'
alt-ctrl-cmd-8 = 'workspace 8'
alt-ctrl-cmd-9 = 'workspace 9'
alt-ctrl-cmd-backtick = 'workspace 10'
alt-cmd-ctrl-q = 'workspace 11'
alt-cmd-ctrl-w = 'workspace 12'
alt-cmd-ctrl-e = 'workspace 13'
alt-cmd-ctrl-r = 'workspace 14'
alt-cmd-ctrl-t = 'workspace 15'
alt-cmd-ctrl-tab = 'workspace 16'
# cmd-q = 'workspace 1'
# cmd-a = 'workspace 2'
# cmd-w = 'workspace 3'
# cmd-e = 'workspace 4'
# cmd-d = 'workspace 5'
# cmd-r = 'workspace 6'
# cmd-s = 'workspace 7'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-cmd-ctrl-1 = 'move-node-to-workspace 1'
alt-shift-cmd-ctrl-2 = 'move-node-to-workspace 2'
alt-shift-cmd-ctrl-3 = 'move-node-to-workspace 3'
alt-shift-cmd-ctrl-4 = 'move-node-to-workspace 4'
alt-shift-cmd-ctrl-5 = 'move-node-to-workspace 5'
alt-shift-cmd-ctrl-6 = 'move-node-to-workspace 6'
alt-shift-cmd-ctrl-7 = 'move-node-to-workspace 7'
alt-shift-cmd-ctrl-8 = 'move-node-to-workspace 8'
alt-shift-cmd-ctrl-9 = 'move-node-to-workspace 9'
alt-shift-cmd-ctrl-backtick = 'move-node-to-workspace 10'
alt-shift-cmd-ctrl-q = 'move-node-to-workspace 11'
alt-shift-cmd-ctrl-w = 'move-node-to-workspace 12'
alt-shift-cmd-ctrl-e = 'move-node-to-workspace 13'
alt-shift-cmd-ctrl-r = 'move-node-to-workspace 14'
alt-shift-cmd-ctrl-t = 'move-node-to-workspace 15'
alt-shift-cmd-ctrl-tab = 'move-node-to-workspace 16'
# cmd-shift-q = 'move-node-to-workspace 1'
# cmd-shift-a = 'move-node-to-workspace 2'
# cmd-shift-w = 'move-node-to-workspace 3'
# cmd-shift-d = 'move-node-to-workspace 4'
# cmd-shift-r = 'move-node-to-workspace 5'
# cmd-shift-g = 'move-node-to-workspace 6'
# cmd-shift-s = 'move-node-to-workspace 7'
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

[workspace-to-monitor-force-assignment]
1 = ['built-in', 'main']
2 = ['DeskPad Display', 'main']
3 = ['DeskPad Display', 'main']
4 = ['DeskPad Display', 'main']
5 = ['DeskPad Display', 'main']
6 = ['DeskPad Display', 'main']
7 = ['DeskPad Display', 'main']
8 = ['DeskPad Display', 'main']
9 = ['main']
10 = ['main']
11 = ['main']
12 = ['main']
13 = ['main']
14 = ['main']
15 = ['main']

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-name-regex-substring = 'Slack'
run = ["layout floating", 'move-node-to-workspace 1']

[[on-window-detected]]
if.app-name-regex-substring = 'Obsidian'
run = ["layout floating", 'move-node-to-workspace 2']

[[on-window-detected]]
if.app-name-regex-substring = 'Arc'
run = ['move-node-to-workspace 2']

[[on-window-detected]]
if.app-name-regex-substring = 'Zen'
run = ['move-node-to-workspace 2']

[[on-window-detected]]
if.app-id = "com.mitchellh.ghostty"
run = ["move-node-to-workspace 3"]

[[on-window-detected]]
if.app-name-regex-substring = 'Intellij'
run = ['move-node-to-workspace 4']

[[on-window-detected]]
if.app-name-regex-substring = 'Youtube Music'
run = ['move-node-to-workspace 5']

[[on-window-detected]]
if.app-name-regex-substring = 'Docker'
run = ['move-node-to-workspace 6']

[[on-window-detected]]
if.app-name-regex-substring = 'Google Gemini'
run = ['move-node-to-workspace 7']

[[on-window-detected]]
if.app-name-regex-substring = 'Postman'
run = ['move-node-to-workspace 8']

[[on-window-detected]]
if.app-name-regex-substring = 'Deskpad'
run = ['move-node-to-workspace 9']

[[on-window-detected]]
if.app-name-regex-substring = 'Vial Web'
run = ['move-node-to-workspace 10']

[[on-window-detected]]
if.app-name-regex-substring = 'Gmail'
run = ['move-node-to-workspace 11']

[[on-window-detected]]
if.app-name-regex-substring = 'Google Calendar'
run = ['move-node-to-workspace 11']

[[on-window-detected]]
if.app-name-regex-substring = 'Confluence PWA'
run = ['move-node-to-workspace 12']

[[on-window-detected]]
if.app-name-regex-substring = 'Jira PWA'
run = ['move-node-to-workspace 13']

[[on-window-detected]]
if.app-name-regex-substring = 'Reclaim'
run = ['move-node-to-workspace 14']

[[on-window-detected]]
if.app-name-regex-substring = 'GibHub'
run = ['move-node-to-workspace 16']
